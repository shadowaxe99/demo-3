At this point, creating a fully-fledged app in React and Next.js would require an ample amount of code that's hard to fit here. But a small example can be a simple app instrumented with Next.js's in-built page-based routing, acting like a basic carousel app. It involves a main page hosting the Carousel and separate item pages for each slide.

The code below is created as per the CSS styles given in context.

Let's start with main `pages/index.js`:

```javascript
import { Carousel, CarouselSlide } from '../components/Carousel';
import { useState } from 'react';

const CarouselPage = () => {
    const [currentSlide, setCurrentSlide] = useState(0);

    const nextSlide = () => {
        setCurrentSlide((prevSlide) => (prevSlide + 1) % 3);
    }

    return (
        <div>
            <h1>Welcome to our Carousel App</h1>
            <Carousel>
                <CarouselSlide isActive={currentSlide === 0}>
                    <h2>Slide 1</h2>
                </CarouselSlide>
                <CarouselSlide isActive={currentSlide === 1}>
                    <h2>Slide 2</h2>
                </CarouselSlide>
                <CarouselSlide isActive={currentSlide === 2}>
                    <h2>Slide 3</h2>
                </CarouselSlide>
            </Carousel>
            <button onClick={nextSlide}>Next Slide</button>
        </div>
    );
}

export default CarouselPage;
```

In `components/Carousel.js`:

```javascript
import styles from './Carousel.module.css';

export const Carousel = ({ children }) => {
    return (
        <div className={styles.carousel}>
            {children}
        </div>
    );
}

export const CarouselSlide = ({ children, isActive }) => {
    return (
        <div className={`${styles.carouselSlide} ${isActive && styles.carouselSlideActive}`}>
            {children}
        </div>
    );
}
```

In `components/Carousel.module.css`:

```css
.carousel {
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    position: relative;
    width: 100%;
    height: 100vh;
    background: #000;
}

.carouselSlide {
    position: absolute;
    opacity: 0;
    transition: all 1s ease-in-out;
}

.carouselSlideActive {
    position: relative;
    opacity: 1;
}
```

The example above illustrates a simple carousel implemented in React and Next.js. Any slide can be further split into a separate component if its complexity demands it. The key here is to ensure each component does one thing excellently.